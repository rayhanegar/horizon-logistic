/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package horizonlogistic;

import java.awt.Component;
import java.sql.*;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ButtonGroup;


/**
 *
 * @author RAYHAN EGAR
 */
public class DashboardMyHistory extends javax.swing.JFrame {
    
    private String connectionUrl = "jdbc:sqlserver://HASHBROWN:1433;"
                + "database=Horizon_Logistic;"
                + "user=sa;"
                + "password=basisdata;"
                + "encrypt=false;"
                + "trustServerCertificate=false;"
                + "loginTimeout=30;";
    
    private ResultSet resultSet = null;
    private Connection connection;
    private Statement statement;
    private PreparedStatement preparedStatement;
    private Map<String, JTextField> jtfMap;
    private Map<String, JLabel> jlMap;
    private String section = "shipment";
    private int fieldCount;
    private String email_cust;
    private String userId;
    
    /**
     * Creates new form DashboardAdmin
     */
    public DashboardMyHistory(String email) {
        initComponents();
        setLocationRelativeTo(null);
        populateTable(jTable, jspTable);
        this.email_cust = email;
        connectQuery("SELECT * FROM shipment WHERE email_cust = " + email_cust);
        populateTable(jTable, jspTable);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jpSidebar = new javax.swing.JPanel();
        jlSidebarTitle = new javax.swing.JLabel();
        jBtnBack = new javax.swing.JButton();
        jlSidebarTitle1 = new javax.swing.JLabel();
        jlSidebarTitle3 = new javax.swing.JLabel();
        jlSidebarTitle4 = new javax.swing.JLabel();
        jlSidebarTitle5 = new javax.swing.JLabel();
        jpContent = new javax.swing.JPanel();
        jpContent1 = new javax.swing.JPanel();
        jlSectionTitle3 = new javax.swing.JLabel();
        jtfKeywords = new javax.swing.JTextField();
        jBtnSearch = new javax.swing.JButton();
        jspTable = new javax.swing.JScrollPane();
        jTable = new javax.swing.JTable();
        jlSectionDetail2 = new javax.swing.JLabel();
        jBtnRefresh = new javax.swing.JButton();
        jspDetail2 = new javax.swing.JScrollPane();
        jpDetail2 = new javax.swing.JPanel();
        jtfField1 = new javax.swing.JTextField();
        jlField1 = new javax.swing.JLabel();
        jlField2 = new javax.swing.JLabel();
        jtfField2 = new javax.swing.JTextField();
        jtfField3 = new javax.swing.JTextField();
        jlField3 = new javax.swing.JLabel();
        jlField4 = new javax.swing.JLabel();
        jlField5 = new javax.swing.JLabel();
        jtfField4 = new javax.swing.JTextField();
        jtfField5 = new javax.swing.JTextField();
        jtfField6 = new javax.swing.JTextField();
        jtfField7 = new javax.swing.JTextField();
        jtfField8 = new javax.swing.JTextField();
        jtfField9 = new javax.swing.JTextField();
        jtfField10 = new javax.swing.JTextField();
        jtfField11 = new javax.swing.JTextField();
        jtfField12 = new javax.swing.JTextField();
        jtfField13 = new javax.swing.JTextField();
        jlField6 = new javax.swing.JLabel();
        jlField7 = new javax.swing.JLabel();
        jlField8 = new javax.swing.JLabel();
        jlField9 = new javax.swing.JLabel();
        jlField10 = new javax.swing.JLabel();
        jlField11 = new javax.swing.JLabel();
        jlField12 = new javax.swing.JLabel();
        jlField13 = new javax.swing.JLabel();
        jBtnDelete = new javax.swing.JButton();
        jComboBoxTop = new javax.swing.JComboBox<>();
        jlFilter = new javax.swing.JLabel();
        jlSort = new javax.swing.JLabel();
        jComboBoxSort = new javax.swing.JComboBox<>();
        jRadioAscending = new javax.swing.JRadioButton();
        jRadioDescending = new javax.swing.JRadioButton();
        jButtonSort = new javax.swing.JButton();
        jButtonFilterTop = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Horizon Logistic");
        setLocation(new java.awt.Point(0, 0));
        setResizable(false);

        jpSidebar.setBackground(new java.awt.Color(255, 255, 255));
        jpSidebar.setFocusable(false);
        jpSidebar.setPreferredSize(new java.awt.Dimension(250, 600));

        jlSidebarTitle.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jlSidebarTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlSidebarTitle.setText("DASHBOARD");
        jlSidebarTitle.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jlSidebarTitle.setVerticalTextPosition(javax.swing.SwingConstants.TOP);

        jBtnBack.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jBtnBack.setText("Back to Menu");
        jBtnBack.setPreferredSize(new java.awt.Dimension(150, 30));
        jBtnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnBackActionPerformed(evt);
            }
        });

        jlSidebarTitle1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jlSidebarTitle1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlSidebarTitle1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/horizonlogistic/Horizon Logistic Logo Resize.png"))); // NOI18N
        jlSidebarTitle1.setText("Horizon Logistic");
        jlSidebarTitle1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jlSidebarTitle1.setVerticalTextPosition(javax.swing.SwingConstants.TOP);

        jlSidebarTitle3.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jlSidebarTitle3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlSidebarTitle3.setText("==============");
        jlSidebarTitle3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jlSidebarTitle3.setVerticalTextPosition(javax.swing.SwingConstants.TOP);

        jlSidebarTitle4.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jlSidebarTitle4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlSidebarTitle4.setText("==============");
        jlSidebarTitle4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jlSidebarTitle4.setVerticalTextPosition(javax.swing.SwingConstants.TOP);

        jlSidebarTitle5.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jlSidebarTitle5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlSidebarTitle5.setText("HISTORY");
        jlSidebarTitle5.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jlSidebarTitle5.setVerticalTextPosition(javax.swing.SwingConstants.TOP);

        javax.swing.GroupLayout jpSidebarLayout = new javax.swing.GroupLayout(jpSidebar);
        jpSidebar.setLayout(jpSidebarLayout);
        jpSidebarLayout.setHorizontalGroup(
            jpSidebarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpSidebarLayout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addComponent(jBtnBack, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jpSidebarLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpSidebarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jlSidebarTitle3, javax.swing.GroupLayout.DEFAULT_SIZE, 238, Short.MAX_VALUE)
                    .addComponent(jlSidebarTitle, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jlSidebarTitle4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jlSidebarTitle1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(jpSidebarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jpSidebarLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jlSidebarTitle5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        jpSidebarLayout.setVerticalGroup(
            jpSidebarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpSidebarLayout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addComponent(jlSidebarTitle1)
                .addGap(18, 18, 18)
                .addComponent(jlSidebarTitle4)
                .addGap(44, 44, 44)
                .addComponent(jlSidebarTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jlSidebarTitle3)
                .addGap(66, 66, 66)
                .addComponent(jBtnBack, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jpSidebarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jpSidebarLayout.createSequentialGroup()
                    .addGap(263, 263, 263)
                    .addComponent(jlSidebarTitle5)
                    .addContainerGap(392, Short.MAX_VALUE)))
        );

        jpContent.setBackground(new java.awt.Color(255, 255, 255));
        jpContent.setPreferredSize(new java.awt.Dimension(600, 100));

        jpContent1.setBackground(new java.awt.Color(255, 255, 255));
        jpContent1.setPreferredSize(new java.awt.Dimension(600, 100));

        jlSectionTitle3.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jlSectionTitle3.setText("Shipment & Payment History");
        jlSectionTitle3.setPreferredSize(new java.awt.Dimension(320, 32));

        jtfKeywords.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jtfKeywords.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfKeywordsActionPerformed(evt);
            }
        });

        jBtnSearch.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jBtnSearch.setText("Search");
        jBtnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnSearchActionPerformed(evt);
            }
        });

        jspTable.setBackground(new java.awt.Color(255, 255, 255));
        jspTable.setPreferredSize(new java.awt.Dimension(690, 240));

        jTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jspTable.setViewportView(jTable);

        jlSectionDetail2.setFont(new java.awt.Font("Segoe UI Light", 0, 24)); // NOI18N
        jlSectionDetail2.setText("-Detail-");
        jlSectionDetail2.setPreferredSize(new java.awt.Dimension(100, 32));

        jBtnRefresh.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jBtnRefresh.setText("Refresh");
        jBtnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnRefreshActionPerformed(evt);
            }
        });

        jpDetail2.setBackground(new java.awt.Color(255, 255, 255));
        jpDetail2.setPreferredSize(new java.awt.Dimension(450, 500));

        jtfField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfField1ActionPerformed(evt);
            }
        });

        jlField1.setText("field-1");

        jlField2.setText("field-2");

        jlField3.setText("field-3");

        jlField4.setText("field-4");

        jlField5.setText("field-5");

        jlField6.setText("field-6");

        jlField7.setText("field-7");

        jlField8.setText("field-8");

        jlField9.setText("field-9");

        jlField10.setText("field-10");

        jlField11.setText("field-11");

        jlField12.setText("field-12");

        jlField13.setText("field-13");

        javax.swing.GroupLayout jpDetail2Layout = new javax.swing.GroupLayout(jpDetail2);
        jpDetail2.setLayout(jpDetail2Layout);
        jpDetail2Layout.setHorizontalGroup(
            jpDetail2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpDetail2Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(jpDetail2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpDetail2Layout.createSequentialGroup()
                        .addComponent(jlField1, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtfField1, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jpDetail2Layout.createSequentialGroup()
                        .addGroup(jpDetail2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jlField2, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jlField3, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jlField4, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jlField5, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jlField6, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jlField7, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jlField8, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jlField9, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jlField10, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jlField11, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jlField12, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jlField13, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jpDetail2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtfField2, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtfField3, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtfField4, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtfField5, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtfField6, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtfField7, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtfField8, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtfField9, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtfField10, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtfField11, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtfField12, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtfField13, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(92, Short.MAX_VALUE))
        );
        jpDetail2Layout.setVerticalGroup(
            jpDetail2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpDetail2Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jpDetail2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlField1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpDetail2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlField2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpDetail2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlField3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpDetail2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlField4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpDetail2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlField5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpDetail2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlField6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpDetail2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfField7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlField7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpDetail2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlField8)
                    .addComponent(jtfField8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpDetail2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlField9)
                    .addComponent(jtfField9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpDetail2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlField10)
                    .addComponent(jtfField10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpDetail2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlField11)
                    .addComponent(jtfField11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpDetail2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlField12)
                    .addComponent(jtfField12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpDetail2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlField13)
                    .addComponent(jtfField13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jspDetail2.setViewportView(jpDetail2);

        jBtnDelete.setText("Delete");
        jBtnDelete.setEnabled(false);
        jBtnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnDeleteActionPerformed(evt);
            }
        });

        jComboBoxTop.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10" }));
        jComboBoxTop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxTopActionPerformed(evt);
            }
        });

        jlFilter.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jlFilter.setText("Filter by Top");

        jlSort.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jlSort.setText("Sort by Column");

        jComboBoxSort.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBoxSort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxSortActionPerformed(evt);
            }
        });

        jRadioAscending.setText("Ascending");
        jRadioAscending.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioAscendingActionPerformed(evt);
            }
        });

        jRadioDescending.setText("Descending");
        jRadioDescending.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioDescendingActionPerformed(evt);
            }
        });

        jButtonSort.setText("Apply Sort");
        jButtonSort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSortActionPerformed(evt);
            }
        });

        jButtonFilterTop.setText("Apply Filter");
        jButtonFilterTop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFilterTopActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpContent1Layout = new javax.swing.GroupLayout(jpContent1);
        jpContent1.setLayout(jpContent1Layout);
        jpContent1Layout.setHorizontalGroup(
            jpContent1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpContent1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jpContent1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpContent1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpContent1Layout.createSequentialGroup()
                            .addComponent(jlSectionTitle3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGap(357, 357, 357))
                        .addComponent(jspDetail2)
                        .addComponent(jlSectionDetail2, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jpContent1Layout.createSequentialGroup()
                            .addGap(124, 124, 124)
                            .addGroup(jpContent1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jpContent1Layout.createSequentialGroup()
                                    .addComponent(jlSort)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jComboBoxSort, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jButtonSort, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGroup(jpContent1Layout.createSequentialGroup()
                                    .addComponent(jRadioAscending, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jRadioDescending, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(105, 105, 105)))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jlFilter, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(176, 176, 176)))
                    .addGroup(jpContent1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jpContent1Layout.createSequentialGroup()
                            .addComponent(jtfKeywords, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jBtnSearch)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jBtnRefresh))
                        .addComponent(jspTable, javax.swing.GroupLayout.PREFERRED_SIZE, 695, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jpContent1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jBtnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jpContent1Layout.createSequentialGroup()
                                .addComponent(jComboBoxTop, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonFilterTop, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(7, Short.MAX_VALUE))
        );
        jpContent1Layout.setVerticalGroup(
            jpContent1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpContent1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jpContent1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBtnSearch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jtfKeywords)
                    .addComponent(jBtnRefresh, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jlSectionTitle3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jspTable, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpContent1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlSort)
                    .addComponent(jlFilter)
                    .addComponent(jButtonSort)
                    .addComponent(jButtonFilterTop)
                    .addComponent(jComboBoxSort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxTop, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpContent1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jpContent1Layout.createSequentialGroup()
                        .addGroup(jpContent1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jRadioDescending)
                            .addComponent(jRadioAscending))
                        .addGap(18, 18, 18)
                        .addComponent(jlSectionDetail2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jspDetail2, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jBtnDelete))
                .addContainerGap())
        );

        javax.swing.GroupLayout jpContentLayout = new javax.swing.GroupLayout(jpContent);
        jpContent.setLayout(jpContentLayout);
        jpContentLayout.setHorizontalGroup(
            jpContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpContentLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jpContent1, javax.swing.GroupLayout.DEFAULT_SIZE, 732, Short.MAX_VALUE)
                .addContainerGap())
        );
        jpContentLayout.setVerticalGroup(
            jpContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpContentLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jpContent1, javax.swing.GroupLayout.DEFAULT_SIZE, 681, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jpSidebar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jpContent, javax.swing.GroupLayout.DEFAULT_SIZE, 744, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jpSidebar, javax.swing.GroupLayout.DEFAULT_SIZE, 687, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jpContent, javax.swing.GroupLayout.PREFERRED_SIZE, 687, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
 
    private void jBtnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnBackActionPerformed
        CustomerMenu CM = new CustomerMenu(email_cust);
        CM.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jBtnBackActionPerformed

    private void jtfKeywordsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfKeywordsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfKeywordsActionPerformed

    private void jBtnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnSearchActionPerformed
//        resetField();
        String tableName = section;
        String keywords = jtfKeywords.getText();

        if (!keywords.isEmpty()) {
            try {
                Connection connection = DriverManager.getConnection(connectionUrl);

                StringBuilder conditionBuilder = new StringBuilder();
                for (int i = 0; i < fieldCount; i++) {
                    String columnName = jTable.getColumnName(i);
                    conditionBuilder.append(columnName).append(" LIKE ?");
                    if (i < fieldCount - 1) {
                        conditionBuilder.append(" OR ");
                    }
                }

                String sql = "SELECT * FROM " + tableName + " WHERE " + conditionBuilder.toString();
                PreparedStatement searchQuery = connection.prepareStatement(sql);

                for (int i = 0; i < fieldCount; i++) {
                    searchQuery.setString(i + 1, "%" + keywords + "%");
                }

                ResultSet result = searchQuery.executeQuery();

                DefaultTableModel model = (DefaultTableModel) jTable.getModel();
                model.setRowCount(0);

                while (result.next()) {
                    Object[] row = new Object[fieldCount];
                    for (int i = 0; i < fieldCount; i++) {
                        row[i] = result.getObject(i + 1);
                    }
                    model.addRow(row);
                }

                connection.close();
            } catch (SQLException e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_jBtnSearchActionPerformed

    private void jBtnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnRefreshActionPerformed
        // TODO add your handling code here:
        String refreshQuery = "SELECT * FROM shipment WHERE email_cust = " + email_cust;
        connectQuery(refreshQuery);
        populateTable(jTable, jspTable);
    }//GEN-LAST:event_jBtnRefreshActionPerformed

    private void jtfField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfField1ActionPerformed

    private void jBtnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnDeleteActionPerformed
        // TODO add your handling code here:
        try {
            String preparedString = "DELETE FROM shipment WHERE " + jlField1.getText() + " = ?";
            PreparedStatement dropStatement = connection.prepareStatement(preparedString);
            dropStatement.setString(1, jtfField1.getText());

            int confirmation = JOptionPane.showConfirmDialog(
                this,
                "Are you sure you want to delete?",
                "Delete Confirmation",
                JOptionPane.YES_NO_OPTION
            );

            if(confirmation == JOptionPane.YES_OPTION){
                dropStatement.execute();
                System.out.println("Successfully deleted from "+ section + " ID no: " + jtfField1.getText());
                JOptionPane.showMessageDialog(this, "Successfully deleted.", "Success", JOptionPane.INFORMATION_MESSAGE);
//                resetField();
            } else {
                System.out.println("Delete aborted.");
                JOptionPane.showMessageDialog(this, "Delete aborted.", "Cancel Deletion", JOptionPane.INFORMATION_MESSAGE);
            }

        } catch (SQLException e){
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error occurred while deleting.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jBtnDeleteActionPerformed

    private void jComboBoxTopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxTopActionPerformed

        // TODO: Execute the query and display the results

    }//GEN-LAST:event_jComboBoxTopActionPerformed

    private void jComboBoxSortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxSortActionPerformed
//        setComboBoxModel();

    }//GEN-LAST:event_jComboBoxSortActionPerformed

    private void jRadioAscendingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioAscendingActionPerformed
        ButtonGroup sortOrderGroup = new ButtonGroup();
        sortOrderGroup.add(jRadioAscending);
        sortOrderGroup.add(jRadioDescending);

    }//GEN-LAST:event_jRadioAscendingActionPerformed

    private void jRadioDescendingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioDescendingActionPerformed
        ButtonGroup sortOrderGroup = new ButtonGroup();
        sortOrderGroup.add(jRadioAscending);
        sortOrderGroup.add(jRadioDescending);
    }//GEN-LAST:event_jRadioDescendingActionPerformed

    private void jButtonSortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSortActionPerformed
        String selectedColumnName = (String) jComboBoxSort.getSelectedItem();

        // Memanggil metode untuk mengurutkan tabel berdasarkan kolom
//        sortTableByColumn(selectedColumnName);
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonSortActionPerformed

    private void jButtonFilterTopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFilterTopActionPerformed

        String tableName = section;

        // Assuming selectedTopValue is of type Integer
        String selectedTopValueStr = (String) jComboBoxTop.getSelectedItem();

        try {
            Integer selectedTopValue = Integer.parseInt(selectedTopValueStr);

            // The rest of your code
            String columnName = (String) jComboBoxSort.getSelectedItem();
            if (columnName != null) {
                String query = "SELECT TOP " + "?" + " * FROM " + tableName + " ORDER BY " + columnName + ";";

                try {
                    // TODO: Execute the query and do something with it
                    connection = DriverManager.getConnection(connectionUrl);
                    try (PreparedStatement preparedStatement = connection.prepareStatement(query)) {
                        preparedStatement.setInt(1, selectedTopValue);

                        try (ResultSet resultSet = preparedStatement.executeQuery()) {
                            while (resultSet.next()) {
                                // Process each row of the result set
                                // Example: Access data using resultSet.getString("columnName")
                            }
                        }
                    }
                } catch (SQLException e) {
                    e.printStackTrace(); // Handle the exception properly in your application
                    JOptionPane.showMessageDialog(this, "Error executing the query: " + e.getMessage());
                } finally {
                    try {
                        if (connection != null && !connection.isClosed()) {
                            connection.close();
                        }
                    } catch (SQLException e) {
                        e.printStackTrace();
                    }
                }
            } else {
                JOptionPane.showMessageDialog(this, "Selected column name is null. Please check your JComboBox data model.");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Please select a valid integer value for the top value.");
        }

    }//GEN-LAST:event_jButtonFilterTopActionPerformed

    private boolean checkEmpty() {
        for (int i = 0; i < fieldCount; i++) {
            String textFieldAccessor = "jtfField" + Integer.toString(i+1);
            if (jtfMap.get(textFieldAccessor).getText().trim().isEmpty()) {
                return true;
            }
        }
        return false;
    }
    private void connectQuery(String sqlQuery){
        try {
            connection = DriverManager.getConnection(connectionUrl);
            statement = connection.createStatement();
            resultSet = statement.executeQuery(sqlQuery);
        } catch (SQLException e){
            e.printStackTrace();
        }
    }
    
    private String[] extractData(JTable table, int row, int col){
        int colCount = table.getColumnCount();
        String[] extracted = new String[colCount-1]; // -1 to exclude button
        try {
            for (int i = 0; i<colCount-1; i++){
            extracted[i] = table.getValueAt(row, i).toString();
            System.out.println(extracted[i]);
        }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return extracted;
    }  
    
    private void populateTable(JTable table, JScrollPane scrollPane){
        
        DefaultTableModel tableModel = new DefaultTableModel();
        try {
            
            int rowCount = resultSet.getRow();
            int colCount = resultSet.getMetaData().getColumnCount();
            fieldCount = colCount;
            // Add columns to the tableModel
            for(int i = 1; i<= colCount; i++) {
                tableModel.addColumn(resultSet.getMetaData().getColumnName(i));
            }
            
            // Add detail button column
            tableModel.addColumn("Detail");
            
            // Print data
            while (resultSet.next()){
                Object[] rowData = new Object[colCount + 1]; // +1 To add column button
                for (int i = 1; i <= colCount; i++) {
                    rowData[i - 1] = resultSet.getObject(i);
                }
                // Add button placeholder in the "Detail" column
                rowData[colCount] = "Button";
                tableModel.addRow(rowData);
            }
            
            table.setModel(tableModel);
            table.getColumnModel().getColumn(colCount).setCellRenderer(new ButtonRenderer());
            scrollPane.setViewportView(table);
            table.setPreferredScrollableViewportSize(table.getPreferredSize());
            
            table.addMouseListener(new java.awt.event.MouseAdapter() {
                @Override
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    int col = table.columnAtPoint(evt.getPoint());
                    int row = table.rowAtPoint(evt.getPoint());
                    
                    if (col == colCount) {
                        System.out.println("Button clicked on row " + row);
                        String[] extracted = extractData(table, row, col);
                        
                        for (int i = 0; i < extracted.length; i++){
                            String fieldLabel = table.getColumnName(i);
                            String fieldText = extracted[i];
                            String labelAccessor = "jlField" + Integer.toString(i+1);
                            String textFieldAccessor = "jtfField" + Integer.toString(i+1);
                            
                            jlMap.get(labelAccessor).setText(fieldLabel);
                            jtfMap.get(textFieldAccessor).setText(fieldText);
                            jtfMap.get(textFieldAccessor).setEditable(false);
                        }
                        jBtnDelete.setEnabled(true);
                    }
                }
            });
            table.setEnabled(false);
            
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
    
    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(DashboardMyHistory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(DashboardMyHistory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(DashboardMyHistory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(DashboardMyHistory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new DashboardMyHistory().setVisible(false);
//                new LoginForm().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtnBack;
    private javax.swing.JButton jBtnDelete;
    private javax.swing.JButton jBtnRefresh;
    private javax.swing.JButton jBtnSearch;
    private javax.swing.JButton jButtonFilterTop;
    private javax.swing.JButton jButtonSort;
    private javax.swing.JComboBox<String> jComboBoxSort;
    private javax.swing.JComboBox<String> jComboBoxTop;
    private javax.swing.JRadioButton jRadioAscending;
    private javax.swing.JRadioButton jRadioDescending;
    private javax.swing.JTable jTable;
    private javax.swing.JLabel jlField1;
    private javax.swing.JLabel jlField10;
    private javax.swing.JLabel jlField11;
    private javax.swing.JLabel jlField12;
    private javax.swing.JLabel jlField13;
    private javax.swing.JLabel jlField2;
    private javax.swing.JLabel jlField3;
    private javax.swing.JLabel jlField4;
    private javax.swing.JLabel jlField5;
    private javax.swing.JLabel jlField6;
    private javax.swing.JLabel jlField7;
    private javax.swing.JLabel jlField8;
    private javax.swing.JLabel jlField9;
    private javax.swing.JLabel jlFilter;
    private javax.swing.JLabel jlSectionDetail2;
    private javax.swing.JLabel jlSectionTitle3;
    private javax.swing.JLabel jlSidebarTitle;
    private javax.swing.JLabel jlSidebarTitle1;
    private javax.swing.JLabel jlSidebarTitle3;
    private javax.swing.JLabel jlSidebarTitle4;
    private javax.swing.JLabel jlSidebarTitle5;
    private javax.swing.JLabel jlSort;
    private javax.swing.JPanel jpContent;
    private javax.swing.JPanel jpContent1;
    private javax.swing.JPanel jpDetail2;
    private javax.swing.JPanel jpSidebar;
    private javax.swing.JScrollPane jspDetail2;
    private javax.swing.JScrollPane jspTable;
    private javax.swing.JTextField jtfField1;
    private javax.swing.JTextField jtfField10;
    private javax.swing.JTextField jtfField11;
    private javax.swing.JTextField jtfField12;
    private javax.swing.JTextField jtfField13;
    private javax.swing.JTextField jtfField2;
    private javax.swing.JTextField jtfField3;
    private javax.swing.JTextField jtfField4;
    private javax.swing.JTextField jtfField5;
    private javax.swing.JTextField jtfField6;
    private javax.swing.JTextField jtfField7;
    private javax.swing.JTextField jtfField8;
    private javax.swing.JTextField jtfField9;
    private javax.swing.JTextField jtfKeywords;
    // End of variables declaration//GEN-END:variables
}
